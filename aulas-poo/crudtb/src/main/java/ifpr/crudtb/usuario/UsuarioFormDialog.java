/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ifpr.crudtb.usuario;

import ifpr.crudtb.usuario.dao.UsuarioDAO;
import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

public class UsuarioFormDialog extends javax.swing.JDialog {
    
    private Border bordaOriginal;
    private Border bordaVermelha;
    private Usuario usuario;
    private UsuarioDAO usuarioDao;
    
    public UsuarioFormDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        bordaOriginal = nomeTF.getBorder();
        bordaVermelha = BorderFactory.createLineBorder(Color.RED);
        usuario = new Usuario();
        usuarioDao = new UsuarioDAO();
        
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        
    }
    
    public void formToObject() {
        usuario.setNome(nomeTF.getText().trim());
        usuario.setCpf(cpfTF.getText().trim());
        usuario.setEmail(emailTF.getText().trim());
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String campoDataNasc = dataNascimentoTF.getText().trim();
        LocalDate dtNasc = LocalDate.parse(campoDataNasc, dtf);
        if (femininoRB.isSelected()) {
            usuario.setSexo(SexoPessoa.FEMININO);
        } else if (masculinoRB.isSelected()) {
            usuario.setSexo(SexoPessoa.MASCULINO);
        } else {
            usuario.setSexo(SexoPessoa.NAO_INFORMADO);
        }
    }
    
    public void limparCampos() {
        apagarTextoCampos();
        setarBordaOriginal();
    }
    
    private void apagarTextoCampos() {
        nomeTF.setText("");
        emailTF.setText("");
        cpfTF.setText("");
        dataNascimentoTF.setText("");
        sexoGroup.clearSelection();
    }
    
    private void setarBordaOriginal() {
        nomeTF.setBorder(bordaOriginal);
        emailTF.setBorder(bordaOriginal);
        cpfTF.setBorder(bordaOriginal);
        dataNascimentoTF.setBorder(bordaOriginal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sexoGroup = new javax.swing.ButtonGroup();
        painelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        salvarUsuarioBT = new javax.swing.JButton();
        cancelarUsuarioBT = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        nomeTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        cpfTF = new javax.swing.JFormattedTextField();
        dataNascimentoTF = new javax.swing.JFormattedTextField();
        femininoRB = new javax.swing.JRadioButton();
        masculinoRB = new javax.swing.JRadioButton();
        naoInformadoRB = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dados do usuário");

        jLabel2.setText("* Nome:");

        jLabel3.setText("* E-mail:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user72.png"))); // NOI18N

        jLabel5.setText("* CPF:");

        jLabel6.setText("* Data de nascimento:");

        jLabel7.setText("Sexo:");

        salvarUsuarioBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filesave.png"))); // NOI18N
        salvarUsuarioBT.setText("Salvar");
        salvarUsuarioBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarUsuarioBTActionPerformed(evt);
            }
        });

        cancelarUsuarioBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        cancelarUsuarioBT.setText("Cancelar");
        cancelarUsuarioBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarUsuarioBTActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("* Campos obrigatórios");

        try {
            cpfTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfTFActionPerformed(evt);
            }
        });

        try {
            dataNascimentoTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataNascimentoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNascimentoTFActionPerformed(evt);
            }
        });

        sexoGroup.add(femininoRB);
        femininoRB.setText("Feminino");

        sexoGroup.add(masculinoRB);
        masculinoRB.setText("Masculino");

        sexoGroup.add(naoInformadoRB);
        naoInformadoRB.setText("Não informado");

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(280, 280, 280))
                            .addComponent(dataNascimentoTF)
                            .addComponent(cpfTF)
                            .addComponent(emailTF)
                            .addComponent(nomeTF)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                                        .addComponent(salvarUsuarioBT)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cancelarUsuarioBT))
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addComponent(femininoRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(masculinoRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(naoInformadoRB)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpfTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataNascimentoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(femininoRB)
                    .addComponent(masculinoRB)
                    .addComponent(naoInformadoRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarUsuarioBT)
                    .addComponent(cancelarUsuarioBT))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataNascimentoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNascimentoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataNascimentoTFActionPerformed

    private void cancelarUsuarioBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarUsuarioBTActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarUsuarioBTActionPerformed

    private void salvarUsuarioBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarUsuarioBTActionPerformed
        if (validacaoOK()) {
            formToObject();
            if (usuario.getId() != 0) {
                
                usuarioDao.update(usuario);
            } else {
                usuarioDao.create(usuario);
                
            }
            JOptionPane.showMessageDialog(this,"Dados  Salvos com sucesso","Sucesso",JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
            this.dispose();

            // salvar ou atualizar no BD
        } else {
            JOptionPane.showMessageDialog(this, "Preecha os campos em vermelho ", "Erro de validação ", JOptionPane.ERROR_MESSAGE);
            // Erro de validação
            // mostrar msg para o usuário
        }
    }//GEN-LAST:event_salvarUsuarioBTActionPerformed

    private void cpfTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfTFActionPerformed
    
    private boolean validacaoOK() {
        boolean isFormValido = true;
        // nome não pode estar vazio
        if (nomeTF.getText().trim().equals("")) {
            isFormValido = false;
            nomeTF.setBorder(bordaVermelha);
        } else {
            nomeTF.setBorder(bordaOriginal);
        }
        // email não pode estar vazio e deve terminar
        // com @ifpr.edu.br
        if (emailTF.getText().trim().equals("") || !emailTF.getText().trim().toLowerCase().contains("@ifpr.edu.br")) {
            emailTF.setBorder(bordaVermelha);
            isFormValido = false;
            
        } else {
            emailTF.setBorder(bordaOriginal);
        }
        
        if (cpfTF.getText().trim().equals("") || cpfTF.getText().trim().length() != 14) {
            isFormValido = false;
            cpfTF.setBorder(bordaVermelha);
        } else {
            cpfTF.setBorder(bordaOriginal);
        }
        
        if (dataNascimentoTF.getText().trim().length() != 10) {
            isFormValido = false;
            dataNascimentoTF.setBorder(bordaVermelha);
        } else {
            dataNascimentoTF.setBorder(bordaOriginal);
        }

        // cpf não pode estar vazio e deve ter tamanho 11
        // data não pode ser vazia e deve ser data valida
        return isFormValido;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarUsuarioBT;
    private javax.swing.JFormattedTextField cpfTF;
    private javax.swing.JFormattedTextField dataNascimentoTF;
    private javax.swing.JTextField emailTF;
    private javax.swing.JRadioButton femininoRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton masculinoRB;
    private javax.swing.JRadioButton naoInformadoRB;
    private javax.swing.JTextField nomeTF;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JButton salvarUsuarioBT;
    private javax.swing.ButtonGroup sexoGroup;
    // End of variables declaration//GEN-END:variables
}
